/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.uhh.l2g.plugins.model.Institution;
import de.uhh.l2g.plugins.model.InstitutionModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Institution service. Represents a row in the &quot;LG_Institution&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.uhh.l2g.plugins.model.InstitutionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InstitutionImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see InstitutionImpl
 * @see de.uhh.l2g.plugins.model.Institution
 * @see de.uhh.l2g.plugins.model.InstitutionModel
 * @generated
 */
public class InstitutionModelImpl extends BaseModelImpl<Institution>
	implements InstitutionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a institution model instance should use the {@link de.uhh.l2g.plugins.model.Institution} interface instead.
	 */
	public static final String TABLE_NAME = "LG_Institution";
	public static final Object[][] TABLE_COLUMNS = {
			{ "institutionId", Types.BIGINT },
			{ "parentId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "typ", Types.VARCHAR },
			{ "www", Types.VARCHAR },
			{ "level", Types.INTEGER },
			{ "sort", Types.INTEGER },
			{ "groupId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table LG_Institution (institutionId LONG not null primary key,parentId LONG,name VARCHAR(75) null,typ VARCHAR(75) null,www VARCHAR(75) null,level INTEGER,sort INTEGER,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table LG_Institution";
	public static final String ORDER_BY_JPQL = " ORDER BY institution.sort ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LG_Institution.sort ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.uhh.l2g.plugins.model.Institution"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.uhh.l2g.plugins.model.Institution"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.de.uhh.l2g.plugins.model.Institution"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long INSTITUTIONID_COLUMN_BITMASK = 2L;
	public static long LEVEL_COLUMN_BITMASK = 4L;
	public static long NAME_COLUMN_BITMASK = 8L;
	public static long PARENTID_COLUMN_BITMASK = 16L;
	public static long SORT_COLUMN_BITMASK = 32L;
	public static long TYP_COLUMN_BITMASK = 64L;
	public static long WWW_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.uhh.l2g.plugins.model.Institution"));

	public InstitutionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _institutionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setInstitutionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _institutionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Institution.class;
	}

	@Override
	public String getModelClassName() {
		return Institution.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("institutionId", getInstitutionId());
		attributes.put("parentId", getParentId());
		attributes.put("name", getName());
		attributes.put("typ", getTyp());
		attributes.put("www", getWww());
		attributes.put("level", getLevel());
		attributes.put("sort", getSort());
		attributes.put("groupId", getGroupId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long institutionId = (Long)attributes.get("institutionId");

		if (institutionId != null) {
			setInstitutionId(institutionId);
		}

		Long parentId = (Long)attributes.get("parentId");

		if (parentId != null) {
			setParentId(parentId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String typ = (String)attributes.get("typ");

		if (typ != null) {
			setTyp(typ);
		}

		String www = (String)attributes.get("www");

		if (www != null) {
			setWww(www);
		}

		Integer level = (Integer)attributes.get("level");

		if (level != null) {
			setLevel(level);
		}

		Integer sort = (Integer)attributes.get("sort");

		if (sort != null) {
			setSort(sort);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getInstitutionId() {
		return _institutionId;
	}

	@Override
	public void setInstitutionId(long institutionId) {
		_columnBitmask |= INSTITUTIONID_COLUMN_BITMASK;

		if (!_setOriginalInstitutionId) {
			_setOriginalInstitutionId = true;

			_originalInstitutionId = _institutionId;
		}

		_institutionId = institutionId;
	}

	public long getOriginalInstitutionId() {
		return _originalInstitutionId;
	}

	@Override
	public long getParentId() {
		return _parentId;
	}

	@Override
	public void setParentId(long parentId) {
		_columnBitmask |= PARENTID_COLUMN_BITMASK;

		if (!_setOriginalParentId) {
			_setOriginalParentId = true;

			_originalParentId = _parentId;
		}

		_parentId = parentId;
	}

	public long getOriginalParentId() {
		return _originalParentId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public String getTyp() {
		if (_typ == null) {
			return StringPool.BLANK;
		}
		else {
			return _typ;
		}
	}

	@Override
	public void setTyp(String typ) {
		_columnBitmask |= TYP_COLUMN_BITMASK;

		if (_originalTyp == null) {
			_originalTyp = _typ;
		}

		_typ = typ;
	}

	public String getOriginalTyp() {
		return GetterUtil.getString(_originalTyp);
	}

	@Override
	public String getWww() {
		if (_www == null) {
			return StringPool.BLANK;
		}
		else {
			return _www;
		}
	}

	@Override
	public void setWww(String www) {
		_columnBitmask |= WWW_COLUMN_BITMASK;

		if (_originalWww == null) {
			_originalWww = _www;
		}

		_www = www;
	}

	public String getOriginalWww() {
		return GetterUtil.getString(_originalWww);
	}

	@Override
	public int getLevel() {
		return _level;
	}

	@Override
	public void setLevel(int level) {
		_columnBitmask |= LEVEL_COLUMN_BITMASK;

		if (!_setOriginalLevel) {
			_setOriginalLevel = true;

			_originalLevel = _level;
		}

		_level = level;
	}

	public int getOriginalLevel() {
		return _originalLevel;
	}

	@Override
	public int getSort() {
		return _sort;
	}

	@Override
	public void setSort(int sort) {
		_columnBitmask = -1L;

		if (!_setOriginalSort) {
			_setOriginalSort = true;

			_originalSort = _sort;
		}

		_sort = sort;
	}

	public int getOriginalSort() {
		return _originalSort;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Institution.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Institution toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Institution)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		InstitutionImpl institutionImpl = new InstitutionImpl();

		institutionImpl.setInstitutionId(getInstitutionId());
		institutionImpl.setParentId(getParentId());
		institutionImpl.setName(getName());
		institutionImpl.setTyp(getTyp());
		institutionImpl.setWww(getWww());
		institutionImpl.setLevel(getLevel());
		institutionImpl.setSort(getSort());
		institutionImpl.setGroupId(getGroupId());

		institutionImpl.resetOriginalValues();

		return institutionImpl;
	}

	@Override
	public int compareTo(Institution institution) {
		int value = 0;

		if (getSort() < institution.getSort()) {
			value = -1;
		}
		else if (getSort() > institution.getSort()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Institution)) {
			return false;
		}

		Institution institution = (Institution)obj;

		long primaryKey = institution.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		InstitutionModelImpl institutionModelImpl = this;

		institutionModelImpl._originalInstitutionId = institutionModelImpl._institutionId;

		institutionModelImpl._setOriginalInstitutionId = false;

		institutionModelImpl._originalParentId = institutionModelImpl._parentId;

		institutionModelImpl._setOriginalParentId = false;

		institutionModelImpl._originalName = institutionModelImpl._name;

		institutionModelImpl._originalTyp = institutionModelImpl._typ;

		institutionModelImpl._originalWww = institutionModelImpl._www;

		institutionModelImpl._originalLevel = institutionModelImpl._level;

		institutionModelImpl._setOriginalLevel = false;

		institutionModelImpl._originalSort = institutionModelImpl._sort;

		institutionModelImpl._setOriginalSort = false;

		institutionModelImpl._originalGroupId = institutionModelImpl._groupId;

		institutionModelImpl._setOriginalGroupId = false;

		institutionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Institution> toCacheModel() {
		InstitutionCacheModel institutionCacheModel = new InstitutionCacheModel();

		institutionCacheModel.institutionId = getInstitutionId();

		institutionCacheModel.parentId = getParentId();

		institutionCacheModel.name = getName();

		String name = institutionCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			institutionCacheModel.name = null;
		}

		institutionCacheModel.typ = getTyp();

		String typ = institutionCacheModel.typ;

		if ((typ != null) && (typ.length() == 0)) {
			institutionCacheModel.typ = null;
		}

		institutionCacheModel.www = getWww();

		String www = institutionCacheModel.www;

		if ((www != null) && (www.length() == 0)) {
			institutionCacheModel.www = null;
		}

		institutionCacheModel.level = getLevel();

		institutionCacheModel.sort = getSort();

		institutionCacheModel.groupId = getGroupId();

		return institutionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{institutionId=");
		sb.append(getInstitutionId());
		sb.append(", parentId=");
		sb.append(getParentId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", typ=");
		sb.append(getTyp());
		sb.append(", www=");
		sb.append(getWww());
		sb.append(", level=");
		sb.append(getLevel());
		sb.append(", sort=");
		sb.append(getSort());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("de.uhh.l2g.plugins.model.Institution");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>institutionId</column-name><column-value><![CDATA[");
		sb.append(getInstitutionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentId</column-name><column-value><![CDATA[");
		sb.append(getParentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typ</column-name><column-value><![CDATA[");
		sb.append(getTyp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>www</column-name><column-value><![CDATA[");
		sb.append(getWww());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level</column-name><column-value><![CDATA[");
		sb.append(getLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sort</column-name><column-value><![CDATA[");
		sb.append(getSort());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Institution.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Institution.class
		};
	private long _institutionId;
	private long _originalInstitutionId;
	private boolean _setOriginalInstitutionId;
	private long _parentId;
	private long _originalParentId;
	private boolean _setOriginalParentId;
	private String _name;
	private String _originalName;
	private String _typ;
	private String _originalTyp;
	private String _www;
	private String _originalWww;
	private int _level;
	private int _originalLevel;
	private boolean _setOriginalLevel;
	private int _sort;
	private int _originalSort;
	private boolean _setOriginalSort;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _columnBitmask;
	private Institution _escapedModel;
}