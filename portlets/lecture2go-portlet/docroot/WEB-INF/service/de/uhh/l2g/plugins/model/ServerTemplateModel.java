/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the ServerTemplate service. Represents a row in the &quot;LG_ServerTemplate&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link de.uhh.l2g.plugins.model.impl.ServerTemplateModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link de.uhh.l2g.plugins.model.impl.ServerTemplateImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see ServerTemplate
 * @see de.uhh.l2g.plugins.model.impl.ServerTemplateImpl
 * @see de.uhh.l2g.plugins.model.impl.ServerTemplateModelImpl
 * @generated
 */
public interface ServerTemplateModel extends BaseModel<ServerTemplate> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a server template model instance should use the {@link ServerTemplate} interface instead.
	 */

	/**
	 * Returns the primary key of this server template.
	 *
	 * @return the primary key of this server template
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this server template.
	 *
	 * @param primaryKey the primary key of this server template
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the server template ID of this server template.
	 *
	 * @return the server template ID of this server template
	 */
	public long getServerTemplateId();

	/**
	 * Sets the server template ID of this server template.
	 *
	 * @param serverTemplateId the server template ID of this server template
	 */
	public void setServerTemplateId(long serverTemplateId);

	/**
	 * Returns the group ID of this server template.
	 *
	 * @return the group ID of this server template
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this server template.
	 *
	 * @param groupId the group ID of this server template
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the name of this server template.
	 *
	 * @return the name of this server template
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this server template.
	 *
	 * @param name the name of this server template
	 */
	public void setName(String name);

	/**
	 * Returns the type of this server template.
	 *
	 * @return the type of this server template
	 */
	public int getType();

	/**
	 * Sets the type of this server template.
	 *
	 * @param type the type of this server template
	 */
	public void setType(int type);

	/**
	 * Returns the prefix u r l of this server template.
	 *
	 * @return the prefix u r l of this server template
	 */
	@AutoEscape
	public String getPrefixURL();

	/**
	 * Sets the prefix u r l of this server template.
	 *
	 * @param prefixURL the prefix u r l of this server template
	 */
	public void setPrefixURL(String prefixURL);

	/**
	 * Returns the suffix u r l of this server template.
	 *
	 * @return the suffix u r l of this server template
	 */
	@AutoEscape
	public String getSuffixURL();

	/**
	 * Sets the suffix u r l of this server template.
	 *
	 * @param suffixURL the suffix u r l of this server template
	 */
	public void setSuffixURL(String suffixURL);

	/**
	 * Returns the sec ext of this server template.
	 *
	 * @return the sec ext of this server template
	 */
	@AutoEscape
	public String getSecExt();

	/**
	 * Sets the sec ext of this server template.
	 *
	 * @param secExt the sec ext of this server template
	 */
	public void setSecExt(String secExt);

	/**
	 * Returns the template u r l of this server template.
	 *
	 * @return the template u r l of this server template
	 */
	@AutoEscape
	public String getTemplateURL();

	/**
	 * Sets the template u r l of this server template.
	 *
	 * @param templateURL the template u r l of this server template
	 */
	public void setTemplateURL(String templateURL);

	/**
	 * Returns the prefix file of this server template.
	 *
	 * @return the prefix file of this server template
	 */
	@AutoEscape
	public String getPrefixFile();

	/**
	 * Sets the prefix file of this server template.
	 *
	 * @param prefixFile the prefix file of this server template
	 */
	public void setPrefixFile(String prefixFile);

	/**
	 * Returns the suffix file of this server template.
	 *
	 * @return the suffix file of this server template
	 */
	@AutoEscape
	public String getSuffixFile();

	/**
	 * Sets the suffix file of this server template.
	 *
	 * @param suffixFile the suffix file of this server template
	 */
	public void setSuffixFile(String suffixFile);

	/**
	 * Returns the template file of this server template.
	 *
	 * @return the template file of this server template
	 */
	@AutoEscape
	public String getTemplateFile();

	/**
	 * Sets the template file of this server template.
	 *
	 * @param templateFile the template file of this server template
	 */
	public void setTemplateFile(String templateFile);

	/**
	 * Returns the template i o s of this server template.
	 *
	 * @return the template i o s of this server template
	 */
	public long getTemplateIOS();

	/**
	 * Sets the template i o s of this server template.
	 *
	 * @param templateIOS the template i o s of this server template
	 */
	public void setTemplateIOS(long templateIOS);

	/**
	 * Returns the template android of this server template.
	 *
	 * @return the template android of this server template
	 */
	public long getTemplateAndroid();

	/**
	 * Sets the template android of this server template.
	 *
	 * @param templateAndroid the template android of this server template
	 */
	public void setTemplateAndroid(long templateAndroid);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ServerTemplate serverTemplate);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ServerTemplate> toCacheModel();

	@Override
	public ServerTemplate toEscapedModel();

	@Override
	public ServerTemplate toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}